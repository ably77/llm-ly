name: Generate Proxy Action

on:
  workflow_dispatch:
    inputs:
      routes:
        description: 'Select the route options (comma-separated)'
        required: true
        default: 'openai,gemini,claude,mistral'
        type: string
      hostname:
        description: 'Hostname (optional, leave empty for random host at ezai-*.kapoozi.com)'
        required: false
        default: 'ezai.kapoozi.com'
        type: string
      random_path_prefix:
        description: 'Actual random path prefix to use'
        required: true
        type: string
      route_id:
        description: 'Route ID in the database'
        required: true
        type: string
      webhook_url:
        description: 'Webhook URL to call on completion'
        required: true
        type: string

jobs:
  update-manifest:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Render manifest based on input
        id: render_manifest
        run: |  
          ROUTE_ID=${{ github.event.inputs.route_id }}
          RANDOM_PATH_PREFIX=${{ github.event.inputs.random_path_prefix }}
          ROUTES=${{ github.event.inputs.routes }}
          HOSTNAME=${{ github.event.inputs.hostname }}
          IFS=',' read -ra ROUTE_ARRAY <<< "$ROUTES"

          RULES=""
          for ROUTE_NAME in "${ROUTE_ARRAY[@]}"; do
            case $ROUTE_NAME in
              "openai")
                BACKEND_REF_NAME="openai"
                PATH_PREFIX="/openai"
                ROUTE_OPTION_NAME="openai-route-policies"
                ;;
              "gemini")
                BACKEND_REF_NAME="gemini"
                PATH_PREFIX="/gemini"
                ROUTE_OPTION_NAME="gemini-route-policies"
                ;;
              "claude")
                BACKEND_REF_NAME="claude"
                PATH_PREFIX="/claude"
                ROUTE_OPTION_NAME="claude-route-policies"
                ;;
              "mistral")
                BACKEND_REF_NAME="mistral"
                PATH_PREFIX="/mistral"
                ROUTE_OPTION_NAME="mistral-route-policies"
                ;;
            esac

            RULES="${RULES}
                    - backendRefName: $BACKEND_REF_NAME
                      pathPrefix: $PATH_PREFIX
                      routeOptionName: $ROUTE_OPTION_NAME
                      useRandomPathPrefix: true"
          done

          if [ -n "$HOSTNAME" ]; then
            HOSTNAMES="hostnames:
                    - \"$HOSTNAME\""
          else
            HOSTNAMES=""
          fi

          FILE_PATH="environments/kapoozi/ai-gateway-routes/base/ezai-${ROUTE_ID}.yaml"

          cat <<EOF > $FILE_PATH
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: ezai-${ROUTE_ID}
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
          spec:
            project: ai-gateway-routes
            destination:
              namespace: ai-gateway
              server: "https://kubernetes.default.svc"
            source:
              repoURL: 'https://github.com/ably77/llm-ly'
              targetRevision: HEAD
              path: llm-route-gen-chart
              helm:
                values: |
                  metadata:
                    name: "ezai-${ROUTE_ID}"
                    labels:
                      prefixPath: "${RANDOM_PATH_PREFIX}"
                  spec:
                    ${HOSTNAMES}
                    parentRefs:
                      - name: https
                        namespace: gloo-system
                    rules:${RULES}
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
          EOF

          echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV
      
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Configured new llm proxy using github action
          file_pattern: |
            ${{ env.FILE_PATH }}
          pull_before_push: true
            
      - name: Send webhook notification
        run: |
          curl -v -L -X POST -d '{ "status": "success", "action": "create" }' ${{GitHub.event.inputs.webhook_url }}
